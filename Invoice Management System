import java.util.Random;
import java.util.Scanner;

public class InvoiceManagementSystem {

    static String[] clientNames;
    static String[] clientEmails;
    static String[] clientPhones;
    static String[] productNames;
    static double[] productPrices;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("-----INVOICE MANAGEMENT SYSTEM-----");
        System.out.println(" ");
        // Adding clients at runtime
        int numClients = getIntInput(scanner, "Enter number of clients: ");
        clientNames = new String[numClients];
        clientEmails = new String[numClients];
        clientPhones = new String[numClients];

        for (int i = 0; i < numClients; i++) {
            System.out.println("Enter details for client " + (i + 1) + ":");
            clientNames[i] = getStringInput(scanner, "Name: ");
            clientEmails[i] = getStringInput(scanner, "Email: ");
            clientPhones[i] = getPhoneInput(scanner, "Phone: ");
        }

        // Adding products at runtime
        System.out.println(" ");
        int numProducts = getIntInput(scanner, "Enter number of products: ");
        productNames = new String[numProducts];
        productPrices = new double[numProducts];
        
        System.out.println(" ");
        for (int i = 0; i < numProducts; i++) {
            System.out.println("Enter details for product " + (i + 1) + ":");
            productNames[i] = getStringInput(scanner, "Name: ");
            productPrices[i] = getDoubleInput(scanner, "Price: ");
        }

        // Creating an invoice for a client
        System.out.println(" ");
        System.out.println("Select a client to create an invoice:");
        for (int i = 0; i < numClients; i++) {
            System.out.println((i + 1) + ". " + clientNames[i]);
        }
        int clientNumber = getIntInput(scanner, "Enter client number: ");

        if (clientNumber > 0 && clientNumber <= numClients) {
            createInvoice(scanner, clientNumber - 1);
        } else {
            System.out.println("Invalid client number.");
        }
    }

    public static void createInvoice(Scanner scanner, int clientIndex) {
        String clientName = clientNames[clientIndex];
        String clientEmail = clientEmails[clientIndex];
        String clientPhone = clientPhones[clientIndex];

        Random rand = new Random();
        int invoiceNumber = rand.nextInt(1000000);

        double total = 0.0;
        StringBuilder invoiceDetails = new StringBuilder();
        int itemCount = 0;
        String choice;

        do {
            System.out.println("Available products:");
            for (int i = 0; i < productNames.length; i++) {
                System.out.println((i + 1) + ". " + productNames[i] + " - $" + productPrices[i]);
            }
            System.out.print("Select product number to add to invoice (or 'done' to finish): ");
            choice = scanner.nextLine();

            if (!choice.equalsIgnoreCase("done")) {
                try {
                    int productNumber = Integer.parseInt(choice);
                    if (productNumber > 0 && productNumber <= productNames.length) {
                        total += productPrices[productNumber - 1];
                        itemCount++;
                        invoiceDetails.append("- ").append(productNames[productNumber - 1])
                                .append(": $").append(productPrices[productNumber - 1]).append("\n");
                    } else {
                        System.out.println("Invalid product number.");
                    }
                } catch (NumberFormatException e) {
                    System.out.println("Invalid input. Please enter a valid product number or 'done'.");
                }
            }
        } while (!choice.equalsIgnoreCase("done"));

        System.out.println("Invoice Number: " + invoiceNumber);
        System.out.println("Invoice for: " + clientName);
        System.out.println("Email: " + clientEmail);
        System.out.println("Phone: " + clientPhone);
        System.out.println("Products:");
        System.out.print(invoiceDetails.toString());
        System.out.println("Number of items purchased: " + itemCount);
        System.out.println("Total: $" + total);
    }

    private static int getIntInput(Scanner scanner, String prompt) {
        int input = -1;
        boolean validInput = false;
        while (!validInput) {
            System.out.print(prompt);
            String line = scanner.nextLine();
            try {
                input = Integer.parseInt(line);
                if (input > 0) {
                    validInput = true;
                } else {
                    System.out.println("Input must be a positive integer.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a valid integer.");
            }
        }
        return input;
    }

    private static double getDoubleInput(Scanner scanner, String prompt) {
        double input = -1;
        boolean validInput = false;
        while (!validInput) {
            System.out.print(prompt);
            String line = scanner.nextLine();
            try {
                input = Double.parseDouble(line);
                if (input > 0) {
                    validInput = true;
                } else {
                    System.out.println("Input must be a positive number.");
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a valid number.");
            }
        }
        return input;
    }

    private static String getStringInput(Scanner scanner, String prompt) {
        String input = "";
        boolean validInput = false;
        while (!validInput) {
            System.out.print(prompt);
            input = scanner.nextLine();
            if (prompt.contains("Email")) {
                if (isValidEmail(input)) {
                    validInput = true;
                } else {
                    System.out.println("Invalid email format. Please enter a valid email address.");
                }
            } else {
                if (input.matches("[a-zA-Z\\s]+")) {
                    validInput = true;
                } else {
                    System.out.println("Invalid input. Please enter a valid string.");
                }
            }
        }
        return input;
    }

    private static boolean isValidEmail(String email) {
        // Very basic email validation, allows wide range of characters before '@'
        return email.matches("[^@]+@[^@]+");
    }

    private static String getPhoneInput(Scanner scanner, String prompt) {
        String input = "";
        boolean validInput = false;
        while (!validInput) {
            System.out.print(prompt);
            input = scanner.nextLine();
            if (input.matches("\\d+")) {
                validInput = true;
            } else {
                System.out.println("Invalid input. Please enter a valid phone number.");
            }
        }
        return input;
    }
}
